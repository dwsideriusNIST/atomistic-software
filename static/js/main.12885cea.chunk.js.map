{"version":3,"sources":["reportWebVitals.js","components/Config.js","components/Table.js","components/Chart/chart.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","yearToRange","year","toString","YEARS","citation","citations","push","split","Set","sort","CODES","codename","codes_metadata","getData","range_key","citations_data","data","dataArray","getDataChart","lines","slice","codeName","line_data","parseInt","isNaN","console","log","Table","props","state","columns","options","event","this","setState","target","value","cols","dataIndex","row","href","rel","searchUrl","className","defaultValue","onChange","handleYearChange","map","x","title","getColumns","React","Component","Chart","margin","top","right","bottom","left","xScale","type","yScale","min","max","stacked","reverse","yFormat","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","ReactDOM","render","StrictMode","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.12885cea.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import citations from '../data/citations.json'\nimport codes_metadata from '../data/codes_metadata.json'\n\nfunction yearToRange(year) {\n  return year.toString() + '-' + year.toString();\n}\n\nfunction rangeToYear(range) {\n  return range.split('-')[0];\n}\n\n// For whatever reason, one cannot simply use `citations.keys()`\nlet YEARS = [];\nfor (const citation in citations){\n  YEARS.push(rangeToYear(citation));\n}\nYEARS = [...new Set(YEARS)];\nYEARS.sort();\n\n\nlet CODES = [];\nfor (const codename in codes_metadata){\n    CODES.push(codename);\n}\n\nfunction getData(year) {\n  let range_key = yearToRange(year);\n  let citations_data = citations[range_key]['citations'];\n  let data = codes_metadata; //.slice();\n\n  for (const codename in data) {\n    data[codename]['citations'] = citations_data[codename]['citations'];\n  }\n\n  let dataArray = [];\n  for (const codename in data) {\n    dataArray.push(data[codename]);\n  }\n  return dataArray;\n}\n\nfunction getDataChart(){\n    let lines = [];\n    for(const codeName of CODES.slice(0,50)){\n        let line_data = []\n        for (const year of YEARS) {\n            let data = {};\n            let range_key = yearToRange(year);\n\n            data['x'] = parseInt(year);\n            data['y'] = parseInt(citations[range_key]['citations'][codeName]['citations']);\n            if (isNaN(data['y']) || data['y'] <= 0) { \n                data['y']=0.1;\n            }\n            line_data.push(data);\n        \n        }\n        lines.push({ 'id': codeName, 'data': line_data});\n    }\n\n    console.log(lines);\n    return lines;\n}\n\nexport {yearToRange, rangeToYear, YEARS, getData, getDataChart};","import React from 'react';\nimport MUIDataTable from \"mui-datatables\";\n//import RangeSlider from './components/RangeSlider'\n//idea: use search icon for link to google scholar\n//import SearchIcon from '@material-ui/icons/Search'\n\nimport columns from '../data/columns.json'\nimport {YEARS, getData} from './Config';\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      year: \"2020\",\n      data: getData(\"2020\"),\n      columns: columns,\n      options: { 'filterType': 'dropdown', \n      'sortOrder': { 'name': 'citations', 'direction': 'desc' },\n      'rowsPerPage': 15,\n     }\n    };\n  }\n\n  handleYearChange(event) {\n    this.setState({ year: event.target.value, data: getData(event.target.value)});\n  }\n\n  getColumns() {\n    let cols = this.state.columns;\n    for (const col of cols) {\n      col['options'] = { 'filter': true, 'sort': true };\n\n    }\n\n    // add homepage link to code\n    cols[0]['options']['customBodyRenderLite'] = (dataIndex) => {\n      const row = this.state.data[dataIndex];\n      return <a href={row['homepage']} target='_blank' rel=\"noreferrer\">{row['name']}</a>;\n    }\n\n    // add google scholar link to number of citations\n    cols.slice(-1)[0]['options']['customBodyRenderLite'] = (dataIndex) => {\n      const row = this.state.data[dataIndex];\n      const searchUrl = 'https://scholar.google.com/scholar?q=' + row['query_string'] \n          + '&hl=en&as_sdt=0%2C5&as_ylo=' + this.state.year + '&as_yhi=' + this.state.year;\n      return <a href={searchUrl} target='_blank' rel=\"noreferrer\">{row['citations']}</a>;\n    }\n\n    // add search link to citation\n\n    return cols;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <select defaultValue={this.state.year} onChange={(event) => this.handleYearChange(event)}>\n            {YEARS.map( x => <option key={x}>{x}</option>)}\n          </select>\n          <MUIDataTable\n            title={\"QM Code List\"}\n            columns={this.getColumns()}\n            data={this.state.data}\n            options={this.state.options}\n          />\n        </header>\n      </div>\n    );\n    // <RangeSlider/>\n    //<Chart />\n  }\n}\n\nexport default Table;\n","import React from 'react'\n//import { ResponsiveBar } from '@nivo/bar'\nimport { ResponsiveLine } from '@nivo/line'\n\n//import config from './config'\nimport './chart.css'\nimport {getDataChart} from '../Config'\n\nclass Chart extends React.Component {\n\n    render() {\n        return (\n            <div className=\"chart\">\n                <ResponsiveLine\n        data={getDataChart()}\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n        xScale={{ type: 'point' }}\n        yScale={{ type: 'log', min: 100, max: 'auto', stacked: true, reverse: false }}\n        yFormat=\" >-.2f\"\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'transportation',\n            legendOffset: 36,\n            legendPosition: 'middle'\n        }}\n        axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'count',\n            legendOffset: -40,\n            legendPosition: 'middle'\n        }}\n        pointSize={10}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[\n            {\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 100,\n                translateY: 0,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 0.75,\n                symbolSize: 12,\n                symbolShape: 'circle',\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n            </div>\n        )\n    }\n}\n\nexport default Chart\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport './index.css';\n//import './App.css';\nimport Table from './components/Table';\nimport Chart from './components/Chart/chart';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <div>\n        <header>\n          Atomistic Simulation Engines\n        </header>\n  \n        <main>\n          <Route exact path=\"/\" component={Table}/>\n          <Route exact path=\"/chart\" component={Chart} />\n        </main>\n  \n        <footer>\n          (c) 2020 Leopold Talirz\n        </footer>\n      </div>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}