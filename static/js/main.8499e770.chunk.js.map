{"version":3,"sources":["reportWebVitals.js","components/Dashboard/listItems.js","components/Dashboard/Styles.js","components/Config.js","components/Columns.js","components/Table.js","components/Dashboard/Title.js","components/About.js","components/Statistics.js","components/Chart/single.js","Dashboard.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mainListItems","ListItem","button","component","href","ListItemIcon","ListItemText","primary","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","yearToRange","year","toString","YEARS","citation","citations","push","parseInt","split","Set","sort","CODES","codename","codes","getData","range_key","citations_data","data","dataArray","Object","assign","getCodeCitations","codeName","line_data","isNaN","TooltipText","tooltip","text","Tooltip","placement","style","Table","props","state","columns","options","event","this","setState","target","value","className","defaultValue","onChange","handleYearChange","map","x","dataIndex","row","rel","methods","includes","licenses","color","searchUrl","encodeURIComponent","Button","React","Component","Title","Typography","variant","gutterBottom","children","Home","classes","Grid","item","xs","Paper","Fragment","source","totalList","line","absoluteGrowthList","relativeGrowthList","Card","message","footnote","size","depositContext","CURRENT_YEAR","slice","GROWTH","dataNew","dataOld","delta","forEach","dNew","index","factor","parseFloat","type","a","b","reverse","citationGrowth","entries","k","v","SingleChart","decodeURIComponent","useParams","ratio","annualGrowth","Math","pow","length","id","toFixed","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","yFormat","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","pointSize","pointColor","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","enableCrosshair","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","animate","Copyright","align","Link","Date","getFullYear","Dashboard","useState","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Drawer","Divider","List","Container","maxWidth","basename","exact","path","About","Statistics","Box","pt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8499e770.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InfoIcon from '@material-ui/icons/Info';\n// import HomeIcon from '@material-ui/icons/Home';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport TableChartIcon from '@material-ui/icons/TableChart';\n\nexport const mainListItems = (\n  <div>\n{/* {      <ListItem button component={\"a\"} href={'#/'}>\n      <ListItemIcon>\n        <HomeIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Home\" />\n    </ListItem>} */}\n    <ListItem button component={\"a\"} href={'#/table'}>\n      <ListItemIcon>\n        <TableChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Table\" />\n    </ListItem>\n    <ListItem button component={\"a\"} href={'#/stats'}>\n      <ListItemIcon>\n        <EqualizerIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Statistics\" />\n    </ListItem>\n    <ListItem button component={\"a\"} href={'#/about'}>\n      <ListItemIcon>\n        <InfoIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"About\" />\n    </ListItem>\n  </div>\n);\n\n// export const secondaryListItems = (\n//   <div>\n//     <ListSubheader inset>Saved reports</ListSubheader>\n//     <ListItem button>\n//       <ListItemIcon>\n//         <AssignmentIcon />\n//       </ListItemIcon>\n//       <ListItemText primary=\"Current month\" />\n//     </ListItem>\n//     <ListItem button>\n//       <ListItemIcon>\n//         <AssignmentIcon />\n//       </ListItemIcon>\n//       <ListItemText primary=\"Last quarter\" />\n//     </ListItem>\n//     <ListItem button>\n//       <ListItemIcon>\n//         <AssignmentIcon />\n//       </ListItemIcon>\n//       <ListItemText primary=\"Year-end sale\" />\n//     </ListItem>\n//   </div>\n// );\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    toolbar: {\n      paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    menuButtonHidden: {\n      display: 'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawerPaper: {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerPaperClose: {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9),\n      },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: '100vh',\n      overflow: 'auto',\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 240,\n    },\n  }));\n\n  export default useStyles;","import citations from '../data/citations.json'\nimport codes from '../data/codes.json'\n\nfunction yearToRange(year) {\n  /**\n   * Transform year to year range used in citations.json\n   * \n   * E.g. 2020 => \"2020-2020\"\n   */\n  return year.toString() + '-' + year.toString();\n}\n\nfunction rangeToYear(range) {\n  /**\n   * Transform year range used in citations.json to year\n   * \n   * E.g. \"2020-2020\" => 2020\n   */\n  return parseInt(range.split('-')[0]);\n}\n\n// For whatever reason, one cannot simply use `citations.keys()`\nlet YEARS = [];\nfor (const citation in citations){\n  YEARS.push(rangeToYear(citation));\n}\nYEARS = [...new Set(YEARS)];\nYEARS.sort();\n\n\nlet CODES = [];\nfor (const codename in codes){\n    CODES.push(codename);\n}\n\nfunction getData(year) {\n  /**\n   * Get data for code table for a given year.\n   */\n  let range_key = yearToRange(year);\n  let citations_data = citations[range_key]['citations'];\n  let data = codes; //.slice();\n\n  for (const codename in data) {\n    data[codename]['citations'] = citations_data[codename]['citations'];\n  }\n\n  let dataArray = [];\n  for (const codename in data) {\n    dataArray.push(Object.assign({}, data[codename]));\n  }\n  return dataArray;\n}\n\nfunction getDataChart(){\n  /**\n   * Get citation data for all codes\n   */\n    let lines = [];\n    for(const codeName of CODES.slice(0,50)){\n        lines.push({ 'id': codeName, 'data': getCodeCitations(codeName)});\n    }\n    return lines;\n}\n\nfunction  getCodeCitations(codeName){\n  let line_data = [];\n    for (const year of YEARS) {\n        let data = {};\n        let range_key = yearToRange(year);\n\n        data['x'] = parseInt(year);\n        data['y'] = parseInt(citations[range_key]['citations'][codeName]['citations']);\n        if (isNaN(data['y']) || data['y'] <= 0) { \n            data['y']=0.1;\n        }\n        line_data.push(data);\n    \n    }\n    return line_data;\n}\n\nexport {yearToRange, rangeToYear, YEARS, CODES, getData, getDataChart, getCodeCitations};","/**\n * Column definition for table\n */\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport methods from '../data/methods';\nimport licenses from '../data/licenses';\n//idea: use search icon for link to google scholar\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport SchoolIcon from '@material-ui/icons/School';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\n//import NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\n//import CopyrightIcon from '@material-ui/icons/Copyright';\nimport LockIcon from '@material-ui/icons/Lock';\nimport NoEncryptionIcon from '@material-ui/icons/NoEncryption';\n\nfunction TooltipText(tooltip, text) {\n    /** \n     * Tooltip with nicely spaced text that doesn't become a cursor.\n     */\n    return <Tooltip title={tooltip} placement=\"top-end\" key={text}><span style={{ 'cursor': 'default', 'marginRight': '0.5em' }}>{text}</span></Tooltip>;\n    //return <Tooltip title={tooltip} placement=\"top-end\" key={text} clickable={true}><span><Button disabled >{text}</Button></span></Tooltip>;\n    //return <Tooltip title={tooltip} placement=\"top-end\" key={text} clickable={true}><span><Paper  >{text}</Paper></span></Tooltip>;\n}\n\nfunction getColumns(data, year) {\n    /**\n     * Prepare columns.\n     * \n     * Since 'customBodyRenderLite' function requires us to fetch the data ourselves, this getColumns function\n     * relies on data to already be present (which is rather bad design).\n     */\n    let columns = [\n        {\n            \"name\": \"name\",\n            \"label\": \"Code\",\n            \"options\": {\n                \"filter\": false, \"sort\": true,\n                // add homepage link to code\n                \"customBodyRenderLite\": (dataIndex) => {\n                    const row = data[dataIndex];\n                    return <a href={row['homepage']} target='_blank' rel=\"noreferrer\">{row['name']}</a>;\n                }\n            }\n        },\n        {\n            \"name\": \"author_name\",\n            \"label\": \"Authors\",\n            \"options\": { \"filter\": false, \"sort\": true, 'selected': false }\n        },\n        {\n            \"name\": \"types\",\n            \"label\": \"Methods\",\n            \"options\": {\n                \"filter\": true,\n                \"sort\": true,\n                \"customBodyRenderLite\": (dataIndex) => {\n                    const types = data[dataIndex]['types'];\n                    return types.map(x => TooltipText(methods[x], x));\n                }\n            }\n        },\n\n        {\n            \"name\": \"description\",\n            \"label\": \"Notes\",\n            \"options\": { \"filter\": false, \"sort\": true }\n        },\n        {\n            \"name\": \"license\",\n            \"label\": \"Cost\",\n            \"options\": {\n                \"filter\": true,\n                \"sort\": true,\n                \"customBodyRenderLite\": (dataIndex) => {\n                    const x = data[dataIndex]['license'];\n                    if (['C', 'C(S)', 'C(C)'].includes(x)) {\n                        return TooltipText(licenses[x], [<AttachMoneyIcon />]);\n                    } else if (['F(A)'].includes(x)) {\n                        return TooltipText(licenses[x], [<span><MoneyOffIcon /><SchoolIcon /></span>]);\n                    } else if (['I'].includes(x)) {\n                        return TooltipText(licenses[x], [<ContactMailIcon />]);\n                    } else {\n                        return TooltipText(licenses[x], [<MoneyOffIcon />]);\n                    }\n                    //return TooltipText(licenses[x], x);  import ContactMailIcon from '@material-ui/icons/ContactMail';\n                }\n            }\n        },\n        {\n            \"name\": \"license\",\n            \"label\": \"Source\",\n            \"options\": {\n                \"filter\": true,\n                \"sort\": true,\n                \"customBodyRenderLite\": (dataIndex) => {\n                    const x = data[dataIndex]['license'];\n                    if (['C', 'C(S)', 'F(A)'].includes(x)) {\n                        return TooltipText(licenses[x], [<LockOpenIcon color={'action'} />]);\n                    } else if (['C(C)'].includes(x)) {\n                        return TooltipText(licenses[x], [<LockIcon color={'action'} />]);        \n                    } else if (['OS(P)', 'OS(CL)'].includes(x)) {\n                        return TooltipText(licenses[x], [<NoEncryptionIcon color={'action'} />]);\n                    } else if (['F'].includes(x)) {\n                        return TooltipText(licenses[x], [<span><NoEncryptionIcon color={'action'} /></span>]);\n                    } else {\n                        return TooltipText(licenses[x], x);\n                    }\n                }\n            }\n        },\n\n\n        {\n            \"name\": \"citations\",\n            \"label\": \"Citations\",\n            \"options\": {\n                \"filter\": false,\n                \"sort\": true,\n                // add google scholar link to number of citations\n                \"customBodyRenderLite\": (dataIndex) => {\n                    const row = data[dataIndex];\n                    let searchUrl = '';\n\n                    if (row['query_method'] === 'publication') {\n                        searchUrl = 'https://scholar.google.com/scholar?cites=' + row['query_publication_id'].toString();\n                    } else {\n                        searchUrl = 'https://scholar.google.com/scholar?q=' + encodeURIComponent(row['query_string']);\n                    }\n                    searchUrl += '&hl=en&as_sdt=0%2C5&as_ylo=' + year + '&as_yhi=' + year;\n                    return (<a href={searchUrl} target='_blank' rel=\"noreferrer\">{row['citations']}</a>);\n                }\n            }\n        },\n        {\n            \"name\": \"trend\",\n            \"label\": \"Trend\",\n            \"options\": {\n                \"filter\": false,\n                \"sort\": true,\n                // add google scholar link to number of citations\n                \"customBodyRenderLite\": (dataIndex) => {\n                    const row = data[dataIndex];\n                    return <Button href={'#/charts/' + encodeURIComponent(row['name'])} ><ShowChartIcon /> </Button>;\n                }\n            }\n        }\n    ]\n\n    return columns;\n}\n\nexport { getColumns }","/**\n * Overview table with all codes.\n */\nimport React from 'react';\nimport MUIDataTable from \"mui-datatables\";\n//import RangeSlider from './RangeSlider'\n\n\nimport { YEARS, getData } from './Config';\nimport { getColumns } from './Columns';\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      year: \"2020\",\n      data: getData(\"2020\"),\n      columns: null,\n      options: {\n        'filterType': 'checkbox',\n        'sortOrder': { 'name': 'citations', 'direction': 'desc' },\n        'rowsPerPage': 100,\n      }\n    };\n  }\n\n  handleYearChange(event) {\n    this.setState({ year: event.target.value, data: getData(event.target.value) });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <MUIDataTable\n            title={\n              <h2>Citation Data &nbsp;\n              <select defaultValue={this.state.year} onChange={(event) => this.handleYearChange(event)}>\n                  {YEARS.map(x => <option key={x}>{x}</option>)}\n                </select>\n              </h2>\n            }\n            columns={getColumns(this.state.data, this.state.year)}\n            data={this.state.data}\n            options={this.state.options}\n          />\n        </header>\n      </div>\n    );\n    //title={<RangeSlider year={this.state.year} />\n  }\n}\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","// import Chart from './Dashboard/Chart';\n// import Deposits from './Dashboard/Deposits';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ReactMarkdown from 'react-markdown';\n\nimport useStyles from './Dashboard/Styles';\nimport Title from './Dashboard/Title';\n\nconst acknowledgementsMD = `\nThis project was inspired by the [\"Major codes in electronic-structure theory, quantum chemistry, and molecular-dynamics\"](https://www.nomad-coe.eu/old-pages/externals/codes) collection maintained by the [NOMAD Center of Excellence](https://www.nomad-coe.eu) from 2017-2019.\nThanks go to Luca Ghiringelli for being supportive of this effort to transform the static list into an interactive app and a collaborative project.\n\nThe project draws upon further great resources, including:\n * The [Google Scholar](https://scholar.google.com/) search engine for citation counts\n * Wikipedia's [List of quantum chemistry and solid-state physics software](https://en.wikipedia.org/wiki/List_of_quantum_chemistry_and_solid-state_physics_software)\n * Wikipedia's [Comparison of software for molecular mechanics modelling](https://en.wikipedia.org/wiki/Comparison_of_software_for_molecular_mechanics_modeling)\n * SklogWiki's [Materials modelling and computer simulation codes](https://en.wikipedia.org/wiki/Comparison_of_software_for_molecular_mechanics_modeling)\n`;\n\nconst aboutMD = `\nThis is a collaboratively edited list of atomistic simulation codes, together with citation information of the past couple of years.\n\nPlease visit the [source code repository on GitHub](https://github.com/ltalirz/atsim-trends) for instructions on how to fix mistakes, add new simulation engines, and provide feedback.\n`;\n\nexport default function Home() {\n    const classes = useStyles();\n    return (\n        <Grid container spacing={3}>\n            {}\n            {/* About */}\n            <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                    <React.Fragment>\n                        <Title>About</Title>\n                        <Typography component=\"p\" variant=\"body1\">\n                            <ReactMarkdown source={aboutMD} />\n                        </Typography>\n                    </React.Fragment>\n                </Paper>\n            </Grid>\n            {/* Acknowledgements */}\n            <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                    <React.Fragment>\n                        <Title>Acknowledgements</Title>\n                        <Typography component=\"p\" variant=\"body1\">\n                            <ReactMarkdown source={acknowledgementsMD} />\n                        </Typography>\n                    </React.Fragment>\n                </Paper>\n            </Grid>\n        </Grid>);\n}\n\n// {/* Chart */}\n// <Grid item xs={12} md={8} lg={9}>\n//     <Paper className={fixedHeightPaper}>\n//         <Chart />\n//     </Paper>\n// </Grid>\n// {/* Recent Deposits */}\n// <Grid item xs={12} md={4} lg={3}>\n//     <Paper className={fixedHeightPaper}>\n//         <Deposits />\n//     </Paper>\n// </Grid>","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport useStyles from './Dashboard/Styles';\nimport Title from './Dashboard/Title';\nimport { YEARS, getData } from './Config';\n// import { Card } from '@material-ui/core';\n\nfunction citationGrowth(year) {\n    /**\n     * Compute citation growth for given year with respect to previous one.\n     */\n\n    const dataNew = getData(year);\n    const dataOld = getData(year - 1);\n\n    let data = { 'total': [], 'absoluteGrowth': [], 'relativeGrowth': [] , 'typeCounts': [] };\n    let delta = 0;\n    let codeName = '';\n\n    dataNew.forEach((dNew, index) => {\n        codeName = dNew['name'];\n        delta = dNew['citations'] - dataOld[index]['citations'];\n        data['absoluteGrowth'].push([codeName, delta]);\n        data['total'].push([codeName, dNew['citations']]);\n\n        if (dataNew[index]['citations'] < 100) {\n            // We require at least 100 citations for analyzing growth\n            data['relativeGrowth'].push([codeName, 0]);\n        } else {\n            const factor = delta / parseFloat(dataOld[index]['citations']);\n            data['relativeGrowth'].push([codeName, factor]);\n        }\n\n        // add code count to \n        for (const type of dNew['types']){\n            if (type in data['typeCounts']) {\n                data['typeCounts'][type] += 1;\n            } else {\n                data['typeCounts'][type] = 1;\n            }\n        }\n    })\n\n    data['absoluteGrowth'].sort((a, b) => {\n        return a[1] - b[1];\n    }).reverse();\n    data['relativeGrowth'].sort((a, b) => {\n        return a[1] - b[1];\n    }).reverse();\n    data['total'].sort((a, b) => {\n        return a[1] - b[1];\n    }).reverse();\n\n    return data;\n\n}\n\nfunction totalList(data) {\n    return (\n        <Typography component=\"div\" variant=\"subtitle1\">\n        <ol>\n            {data.map(line => <li>{line[0] + \": \" + line[1] + \"\\n\"}</li>)}\n        </ol>\n        </Typography>\n    );     \n}\n\nfunction absoluteGrowthList(data) {\n    return (\n        <Typography component=\"div\" variant=\"subtitle1\">\n        <ol>\n            {data.map(line => <li>{line[0] + \": +\" + line[1] + \"\\n\"}</li>)}\n        </ol>\n        </Typography>\n    );     \n}\n\nfunction relativeGrowthList(data) {\n    return (\n        <Typography component=\"div\" variant=\"subtitle1\">\n        <ol>\n            {data.map(line => <li>{line[0] + \": +\" + parseInt(line[1] * 100) + \"%\\n\"}</li>)}\n        </ol>\n        </Typography>\n    );     \n}\n\nfunction typeList(data) {\n    return (\n        <Typography component=\"div\" variant=\"subtitle1\">\n        <ul>\n        {Object.entries(data).map(( [k,v]) => <li>{k + \": \" + v + \"\\n\"}</li>)}\n        </ul>\n        </Typography>\n    );     \n}\n\nfunction Card(title, message, footnote=\"\", size) {\n    const classes = useStyles();\n    return ([\n        <Grid item xs={size}>\n            <Paper className={classes.paper}>\n                <React.Fragment>\n                    <Title>{title}</Title>\n                    {message}\n                    <Typography color=\"textSecondary\" className={classes.depositContext}>\n                        {footnote}\n</Typography>\n                </React.Fragment>\n            </Paper>\n        </Grid>\n\n    ]);\n}\n\nlet CURRENT_YEAR = YEARS.slice(-1)[0];\nlet GROWTH = citationGrowth(CURRENT_YEAR);\n\nexport default function Home() {\n    return (\n        <Grid container spacing={3}>\n            {Card(\"Simulation engines\", typeList(GROWTH['typeCounts']), \"Number of simulation engines per method.\", 4)}\n            {Card(\"Top cited\", totalList(GROWTH['total'].slice(0, 5)), \n            \"In \" + CURRENT_YEAR +\".\", 4)}\n            {Card(\"Top citation growth\", absoluteGrowthList(GROWTH['absoluteGrowth'].slice(0, 5)), \n            \"In \" + CURRENT_YEAR +\" with respect to \"+ (CURRENT_YEAR-1) + \".\", 4)}\n            {Card(\"Top relative citation growth\", relativeGrowthList(GROWTH['relativeGrowth'].slice(0, 5)),\n                \"In \" + CURRENT_YEAR +\" with respect to \"+ (CURRENT_YEAR-1) + \", considering only codes with >100 citations.\",\n                 4)}\n        </Grid>);\n}","import React from 'react'\nimport { ResponsiveLine } from '@nivo/line'\n\n//import config from './config'\nimport './chart.css'\nimport { getCodeCitations } from '../Config'\nimport {\n    useParams\n} from \"react-router-dom\";\n\nfunction SingleChart() {\n    let codeName = decodeURIComponent( useParams()['code']);\n    const data = getCodeCitations(codeName) ;\n\n    const ratio = data.slice(-1)[0]['y'] / data[0]['y'];\n    const annualGrowth = (Math.pow(ratio, 1.0/data.length) - 1) * 100;\n\n    return (\n        <div className=\"container\">\n            <h2 id=\"title\" >\n                {codeName} { annualGrowth.toFixed(1) + '% annual growth'}\n            </h2>\n            <div className=\"chart\">\n\n                <ResponsiveLine\n                    title={codeName}\n                    data={[{ 'id': codeName, 'data': getCodeCitations(codeName) }]}\n                    margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n                    xScale={{ type: 'point' }}\n                    yScale={{ type: 'linear', min: 0, max: 'auto', stacked: true, reverse: false }}\n                    yFormat=\" >-.2f\"\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={{\n                        orient: 'bottom',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'Year',\n                        legendOffset: 36,\n                        legendPosition: 'middle'\n                    }}\n                    axisLeft={{\n                        orient: 'left',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'Citations (Google Scholar)',\n                        legendOffset: -50,\n                        legendPosition: 'middle'\n                    }}\n                    pointSize={10}\n                    pointColor={{ theme: 'background' }}\n                    pointBorderWidth={2}\n                    pointBorderColor={{ from: 'serieColor' }}\n                    pointLabelYOffset={-12}\n                    enableCrosshair={false}\n                    useMesh={true}\n                    legends={[\n                        {\n                            anchor: 'bottom-right',\n                            direction: 'column',\n                            justify: false,\n                            translateX: 100,\n                            translateY: 0,\n                            itemsSpacing: 0,\n                            itemDirection: 'left-to-right',\n                            itemWidth: 80,\n                            itemHeight: 20,\n                            itemOpacity: 0.75,\n                            symbolSize: 12,\n                            symbolShape: 'circle',\n                            symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                            effects: [\n                                {\n                                    on: 'hover',\n                                    style: {\n                                        itemBackground: 'rgba(0, 0, 0, .03)',\n                                        itemOpacity: 1\n                                    }\n                                }\n                            ]\n                        }\n                    ]}\n                    animate={false}\n                />\n            </div>\n        </div>\n    )\n\n}\n\nexport default SingleChart;\n","import React from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\n\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { mainListItems } from './components/Dashboard/listItems';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport useStyles from './components/Dashboard/Styles';\nimport Table from './components/Table';\nimport About from './components/About';\nimport Statistics from './components/Statistics';\nimport SingleChart from './components/Chart/single';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        atsim-trends\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Trends in atomistic simulation engines\n          </Typography>\n          {\n            // <IconButton color=\"inherit\">\n            //   <Badge badgeContent={4} color=\"secondary\">\n            //     <NotificationsIcon />\n            //   </Badge>\n            // </IconButton>\n          }\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        {/* {<Divider />\n        <List>{secondaryListItems}</List>} */}\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Router basename='/'>\n            {/* { <Container maxWidth={'lg'} style={{'textAlign': 'center'}}>} */}\n            <Route exact path=\"/\" component={Table} />\n            <Route exact path=\"/table\" component={Table} />\n            <Route exact path=\"/charts/:code\" component={SingleChart} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/stats\" component={Statistics} />\n            {/* { </Container>} */}\n          </Router>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Dashboard from './Dashboard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}